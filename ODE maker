function [dy]=miode(t,y,Nadd,timeaddition)

%definim cosntants + funcions a utilitzar en la edo
global  Xinit aN aS Kn Kni k3 k2 KS KSI  Ninit A0 A1 A2 A3 A4 A5 A6 Xmax Tucd tlatency S0 temp fermentduration N_0   


%counter to extract real data, separem t en dies 
counter = round(t/24+1);
if counter == 0
    counter = 1;
end


%Data extreta de fermentacions reals
%Evita utilitzar data quan tsimu>tdata

if counter<=fermentduration
   T = temp(counter);

else
   T=temp(fermentduration);
  
end 

%}


%funció addició nitrogen (DAP)
if t>timeaddition
    A0=3.2;
    N_0=Nadd;
   
 
else 
    Nadd=0;
    A0=1;
    
end

%Condició Tucd en funció de població de llevat

if y(3)>=(Xmax/2)
    Tucd=T;

end


%variables model
k=(2.87E-2)*T+37.62E-2;
E=0.464*(S0-y(1)); 
Vst=(k2*y(1))/(y(1)+KS+KSI*y(1)*E^aS);  
Ni=Ninit+A0*(Nadd-y(2)); 
Nst=Ni/y(3)*(A1*Tucd+A2*T+A5)+A3*T+A4*Tucd+A6;
Vn=(k3*y(2))/(y(2)+Kn+Kni*y(2)*E^aN);


%expressió logica de creixement del llevat

if t>tlatency 
    y(3)=Xinit*(exp(k*(t-tlatency)))/(1+(Xinit*exp(k*(t-tlatency)))/(Xmax));

else 
    y(3)=Xinit;
end

%}


%ode amb totes les funcions
dy(1)=-y(3)*Vst*Nst;
dy(2)=-y(3)*Vn;
dy(3)=k*y(3)*(1-y(3)/Xmax);

dy=[dy(1);dy(2);dy(3)];

end



